---
  swagger: '2.0'
  info:
    description: This is a microservice in Python about RoceServices
    version: 1.0.0
    title: Roce Service Microservices
  tags:
    - name: Roce
      description: ''
    - name: Grids
      description: Service methods that provide data to build grids on the graphic interface
  schemes:
    - http
  paths:
    /get_roles:
      get:
          tags:
            - "Roles"
          summary: "Roles"
          operationId: "get_roles"
          description: "Roles"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: true
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_roles'
          x-swagger-router-controller: "project.views.role"
    /get_calendar:
      get:
          tags:
            - "Calendar"
          summary: "Calendar"
          operationId: "get_calendar"
          description: "Roles"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: true
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/caledar_events'
          x-swagger-router-controller: "project.views.calendar" 
    /login:
      post:
          tags:
            - "Login"
          summary: "Login"
          operationId: "login"
          description: "Login"
          produces:
            - "application/json"
          parameters:
            - in: body
              name: login
              required: true
              schema:
                  $ref: '#/definitions/UserLogin'
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_login'
          x-swagger-router-controller: "project.views.login"
    /restore_password:
      post:
          tags:
            - "Login"
          summary: "restore_password"
          operationId: "restore_password"
          description: "restore_password"
          produces:
            - "application/json"
          parameters:
            - in: body
              name: user
              required: true
              schema:
                  $ref: '#/definitions/UserToken'
          responses:
            '200':
              description: response result successful
          x-swagger-router-controller: "project.views.login"
    /reset_password:
      post:
          tags:
            - "Login"
          summary: "reset_password"
          operationId: "reset_password"
          description: "reset_password"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: true
            - in: body
              name: user
              required: true
              schema:
                  $ref: '#/definitions/ResetUser'
          responses:
            '200':
              description: response result successful
          x-swagger-router-controller: "project.views.login"
    /create_user:
      post:
          tags:
            - "User"
          summary: "Create"
          operationId: "create_user"
          description: "Create"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: true
            - in: body
              name: login
              required: true
              schema:
                  $ref: '#/definitions/CreateUser'
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_user'
          x-swagger-router-controller: "project.views.user"
    /update_user:
      patch:
          tags:
            - "User"
          summary: "Update"
          operationId: "update_user"
          description: "Update"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: true
            - in: body
              name: update
              required: true
              schema:
                  $ref: '#/definitions/UpdateUser'
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_user'
          x-swagger-router-controller: "project.views.user"    
    /is_authenticated:
      get:
          tags:
            - "Login"
          summary: "Login"
          operationId: "validation_user"
          description: "validation_user"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: false
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_authenticated'
          x-swagger-router-controller: "project.views.login"
    /close_session:
      get:
          tags:
            - "Login"
          summary: "Create"
          operationId: "close_session"
          description: "close_session"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: false
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_close'
          x-swagger-router-controller: "project.views.login"
    /get_user:
      get:
          tags:
            - "User"
          summary: "Create"
          operationId: "get_user"
          description: "get_user"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: false
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/resultCreate'
          x-swagger-router-controller: "project.views.user"
    /get_planting_type:
      get:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "get_type_planting"
        description: "get planting type"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            type: "string"
            required: true
            name: "Token"
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/TypePlanting'
        x-swagger-router-controller: "project.views.properties"
    /create_property:
      post:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "create_property"
        description: "create properties"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            type: "string"
            required: true
            name: "Token"
          - in: "body"
            name: properties
            required: true
            schema:
                $ref: '#/definitions/property'
        responses:
          '200':
            description: response result successful
        x-swagger-router-controller: "project.views.properties"
    /get_property:
      get:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "get_property"
        description: "get property"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "id"
            required: true  
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/property'
        x-swagger-router-controller: "project.views.properties"
    /get_property_land:
      get:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "get_property_land"
        description: "get property with land"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "property_id"
            required: true
          - in: "query"
            type: "integer"
            name: "land_id"
            required: true   
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/property_land'
        x-swagger-router-controller: "project.views.stage"
    /get_stage_one:
      get:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "get_stage_one"
        description: "get stage one"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "land_id"
            required: true  
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/stage_one'
        x-swagger-router-controller: "project.views.stage"
    /get_stage:
      get:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "get_stage"
        description: "get stage"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "land_id"
            required: true
          - in: "query"
            type: "integer"
            name: "stage_number"
            required: true   
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/result_stage'
        x-swagger-router-controller: "project.views.stage"
    /set_stage:
      post:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "set_stage"
        description: "set stage"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"  
          - in: "body"            
            name: "data" 
            schema:
              $ref: '#/definitions/set_stage_object' 
        responses:
          '200':
            description: response result successful            
        x-swagger-router-controller: "project.views.stage"             
    /set_stage_one:
      post:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "set_stage_one"
        description: "set stage one"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token" 
          - in: "body"            
            name: "data" 
            schema:
              $ref: '#/definitions/stage_one' 
        responses:
          '200':
            description: response result successful            
        x-swagger-router-controller: "project.views.stage"
    /upload_file:
      post:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "upload_file"
        description: "set stage one"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "formData"
            type: "file"
            name: "image_1"
          - in: "formData"
            type: "file"
            name: "image_2"
          - in: "formData"
            type: "file"
            name: "image_3"  
        responses:
          '200':
            description: response result successful            
        x-swagger-router-controller: "project.views.stage"
    /update_property:
      patch:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "update_property"
        description: "get property"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: body
            name: update
            required: true
            schema:
               $ref: '#/definitions/property'
        responses:
          '200':
            description: response result successful
        x-swagger-router-controller: "project.views.properties"
    /delete_property:
      delete:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "delete_property"
        description: "delete property"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "id"
            required: true  
        responses:
          '200':
            description: response result successful
        x-swagger-router-controller: "project.views.properties"
    /get_users_properties:
      get:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "get_users"
        description: "get users"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/UserDetail_properties'
        x-swagger-router-controller: "project.views.properties"    
    /get_properties:
      get:
        tags:
          - "Properties"
        summary: "Properties"
        operationId: "get_properties"
        description: "get properties"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
        responses:
          '200':
            description: response result successful
            schema:
                type: array
                items:
                  $ref: '#/definitions/Properties'
        x-swagger-router-controller: "project.views.properties"
    /get_info_user:
      get:
          tags:
            - "User"
          summary: "Create"
          operationId: "get_info_user"
          description: "get_info_user"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: false
            - in: "query"
              type: "integer"
              name: "id"
              required: false  
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/resultCreate'
          x-swagger-router-controller: "project.views.user" 
    /delete_user:
      delete:
          tags:
            - "User"
          summary: "Create"
          operationId: "delete_user"
          description: "delete_user"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: false
            - in: "query"
              type: "integer"
              name: "id"
              required: false  
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_delete'
          x-swagger-router-controller: "project.views.user"
    /calendar_stage:
      get:
          tags:
            - "Calendar"
          summary: "Calendar"
          operationId: "calendar_stage"
          description: "calendar_stage"
          produces:
            - "application/json"
          parameters:
            - in: "header"
              type: "string"
              name: "Token"
              required: false
            - in: "query"
              type: "integer"
              name: "id_lote"
              required: false  
          responses:
            '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_calendar'
          x-swagger-router-controller: "project.views.stage"
    /get_product:
      get:
        tags:
          - "Product"
        summary: "Product"
        operationId: "get_product"
        description: "get product"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "id_land"
            required: true
          - in: "query"
            type: "integer"
            name: "id_stage"
            required: true    
        responses:
          '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_product'
        x-swagger-router-controller: "project.views.product"
    /get_historical_land:
      get:
        tags:
          - "Historical"
        summary: "Historical"
        operationId: "get_historical_land"
        description: "get Historical"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "id"
            required: true    
        responses:
          '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/result_historical'
        x-swagger-router-controller: "project.views.historical"
    /get_historical:
      get:
        tags:
          - "Historical"
        summary: "Historical"
        operationId: "get_historical"
        description: "get Historical"
        produces:
          - "application/json"
        parameters:
          - in: "header"
            required: true
            type: "string"
            name: "Token"
          - in: "query"
            type: "integer"
            name: "id"
            required: true    
        responses:
          '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/product'
        x-swagger-router-controller: "project.views.historical" 
    /get_file/{path}:
      get:
        tags:
          - "Stage"
        summary: "Stage"
        operationId: "get_file"
        description: "get file"
        produces:
          - "application/json"
        parameters:
          - in: "query"
            required: true
            type: "string"
            name: "token"
          - in: path
            name: path
            type: string
            required: true
        responses:
          '200':
              description: response result successful
              schema:
                type: array
                items:
                  $ref: '#/definitions/product'
        x-swagger-router-controller: "project.views.stage"                                                         
  definitions:
    property:
      type: object
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        business_name:
          type: "string"
        direction:
          type: "string"
        phone:
          type: "number"
        web_page:
          type: "string"
        email:
          type: "string"
        hectares_total:
          type: "number"
        manager:
          type: "integer"
        property_owner:
          type: "integer"
        sowing_system:
          type: "integer"
        purchasing_manager:
          type: "integer"
        pay_manager:
          type: "integer"
        parthner_add:
          type: "integer"
        decision_influencer:
          type: "integer"
        seller:
          type: "integer"
        responsible_purchasing :
          type: "integer"
        batchs:
          type: "array"
          items:
            $ref: '#/definitions/batch'
    property_land:
      type: object
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        business_name:
          type: "string"
        direction:
          type: "string"
        phone:
          type: "number"
        web_page:
          type: "string"
        email:
          type: "string"
        hectares_total:
          type: "number"
        manager:
          type: "integer"
        property_owner:
          type: "integer"
        sowing_system:
          type: "integer"
        purchasing_manager:
          type: "integer"
        pay_manager:
          type: "integer"
        parthner_add:
          type: "integer"
        decision_influencer:
          type: "integer"
        seller:
          type: "integer"
        responsible_purchasing :
          type: "integer"
        batchs:
          type: "object"
          items:
            $ref: '#/definitions/batch'
    batch:
      type: object
      properties:
        id:
          type: "integer"
        name:
          type: string
        hectares_number:
          type: number
        delete:
          type: boolean
    responseDetail:
      type: object
      properties:
        code:
          type: string
        values:
          type: array
          items:
            type: string
        type:
          type: string
    stage_one:
      type: object
      properties:
        land_id:
          type: "integer"
        variety:
          type: string
        type_sowing:
          type: string
        sowing_date:
          type: string
        real_date:
          type: string
        images:
          type: "array"
          items:
            type: string
          example: ["file.ext","file2.ext","file3.ext"]
    result_stage:
      type: object
      properties:
        land_id:
          type: "integer"
        application_date:
          type: string
        start_traking_date:
          type: string
        end_traking_date:
          type: string
        observations:
          type: "string"
        enable:
          type: "boolean"
        products:
          type: array
          items:
            $ref: '#/definitions/product'
    set_stage_object:
      type: object
      properties:
        land_id:
          type: "integer"
        stage_number:
          type: "integer"
        application_date:
          type: string
        start_traking_date:
          type: string
        end_traking_date:
          type: string
        observations:
          type: "string"
        products:
          type: array
          items:
            $ref: '#/definitions/product'
        images:
          type: "array"
          items:
            type: string
          example: ["file.ext","file2.ext","file3.ext"]          
    create_stage:
      type: object
      properties:
        application_date:
          type: string
        start_traking_date:
          type: string
        end_traking_date:
          type: string
        observations:
          type: "string"
        products:
          type: array
          items:
            $ref: '#/definitions/product'
        images:
          type: "array"
          items:
            type: string
          example: ["file.ext","file2.ext","file3.ext"]
    result_roles:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/RolesSecurity'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"
    result_user:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "string"
          example: "[]"
        details:
          type: "array"
          items:
              $ref: '#/definitions/resultCreate'
        method:
          type: "string"
    result_login:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/Login_result'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"            
    Roles:
      description: "Roles."
      type: "object"
      properties:
        role:
          type: "string"
          example: "admi"
        key:
          type: "integer"
          example: 1
    UserLogin:
      description: "Login Users."
      type: "object"
      properties:
        user:
          type: "string"
          example: "admi"
        password:
          type: "string"
          example: "123asd"
    UserToken:
      description: "Reset User password."
      type: "object"
      properties:
        user:
          type: "string"
          example: "abc@abc.com"
        restore_form:
          type: "string"
          example: "http://localhost/restore"
    ResetUser:
      description: "Reset User password."
      type: "object"
      properties:
        user:
          type: "string"
          example: "abc@abc.com"
        password:
          type: "string"
          example: "abc123"
    Login_result:
      description: "Login"
      type: "object"
      properties:
        name:
          type: "string"
          example: "admi"
        role:
          type: "integer"
          example: 1
        token:
          type: "string"
          example: "admi"          
    RolesSecurity:
      description: "Role Security"
      type: "object"
      properties:
        role:
          type: "array"
          items:
            $ref: '#/definitions/Roles' 
    CreateUser:
      description: "Role Security"
      type: "object"
      properties:
        name:
          type: "string"
          example: "Jonathan" 
        last_name:
          type: "string"
          example: "Rodriguez"
        age:
          type: "integer"
          example: 1
        profesion:
          type: "string"
          example: "Ingeniero"
        email:
          type: "string"
          example: "Jonathanrodrigr@gmail.com"
        phone:
          type: "number"
          example: 123
        password:
          type: "string"
          example: "123"
        role_id:
          type: "integer"
          example: 1
    UpdateUser:
      description: "Role Security"
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "Jonathan" 
        last_name:
          type: "string"
          example: "Rodriguez"
        age:
          type: "integer"
          example: 1
        profesion:
          type: "string"
          example: "Ingeniero"
        email:
          type: "string"
          example: "Jonathanrodrigr@gmail.com"
        phone:
          type: "number"
          example: 123
        password:
          type: "string"
          example: "123"
        role_id:
          type: "integer"
          example: 1    
    result_authenticated:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/authenticated'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"
    authenticated:
      description: "Role Security"
      type: "object"
      properties:
        authenticator:
          type: "boolean"
          example: "true"
    result_close:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "string"
          example: "[]"
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseCloseSession'
        method:
          type: "string"
    responseCloseSession:
      description: "Role Security"
      type: "object"
      properties:
        key:
          type: "integer"
          example: "200"
        value:
          type: "boolean"
          example: "true"
    resultCreate:
      description: "resultCreate"
      type: "object"
      properties:
        key:
          type: "integer"
          example: "200"
        value:
          type: "string"
          example: "usuario creado"
    result_users:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/Users'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"
    Users:
      description: "User"
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "Jonathan" 
        last_name:
          type: "string"
          example: "Rodriguez"
        age:
          type: "integer"
          example: 1
        profesion:
          type: "string"
          example: "Ingeniero"
        email:
          type: "string"
          example: "Jonathanrodrigr@gmail.com"
        phone:
          type: "number"
          example: 123
        role_id:
          type: "integer"
          example: 1
    TypePlanting:
      description: "Type planting"
      type: "object"
      properties:
        id:
          type: "integer"
          example: "1"
        name:
          type: "string"
          example: "Arroz secano"
    UserDetail:
      description: "User Detail"
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "Jonathan" 
        last_name:
          type: "string"
          example: "Rodriguez"
        age:
          type: "integer"
          example: 1
        profesion:
          type: "string"
          example: "Ingeniero"
        email:
          type: "string"
          example: "Jonathanrodrigr@gmail.com"
        phone:
          type: "number"
          example: 123
        role_id:
          type: "integer"
          example: 1
    UserDetail_properties:
      description: "User Detail"
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "Diego Bustamante" 
        rol:
          type: "integer"
          example: 1
    Properties:
      description: "User Detail"
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        name:
          type: "string"
          example: "Finca 1" 
        business_name:
          type: "string"
          example: "finca 1"
        phone:
          type: "number"
          example: "123456"
        type_planting:
          type: "string"
          example: "Secano"
    result_delete:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/DeleteUser'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string" 
    DeleteUser:
      description: "User Detail"
      type: "object"
      properties:
        key:
          type: "integer"
          example: 100
        value:
          type: "string"
          example: "Usuario eliminado"
    result_calendar:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/calendar'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"
    calendar:
      type: "object"
      properties:
        id_stage:
          type: "integer"
          example: 2
        stage_number:
          type: "integer"
          example: 2
        stage_name:  
          type: "string"
          example: "Riego 1"
        complete:
          type: "boolean"
          example: True
    result_product:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/product'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"
    product:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        commercial_name:
          type: "string"
          example: "Cosmo agua"
        ing_active:
          type: "string"
          example: "Bacterias"
        segment:  
          type: "string"
          example: "Bactericida"
        presentation:  
          type: "string"
          example: "1 y Lts"
        concentration:  
          type: "string"
          example: "0,05"
        color:  
          type: "string"
          example: "Verde"
        formulator:  
          type: "string"
          example: "Solitec"
        provider:  
          type: "string"
          example: "Solitec"
        dose_by_ha:  
          type: "number"
          example: 1.9
    result_historical:
      type: "object"
      properties:
        apiVersion:
          type: "string"
        status:
          type: "integer"
        data:
          type: "array"
          items:
            $ref: '#/definitions/historical'
        details:
          type: "array"
          items:
              $ref: '#/definitions/responseDetail'
        method:
          type: "string"
    historical:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        title:
          type: "string"
          example: "Cosmo agua"
    caledar_events:
      type: "object"
      properties:
        id_user:
          type: "integer"
          example: 1
        id_land:
          type: "integer"
          example: 1
        land_name:
          type: "string"
          example: "lote 1"
        property_id:
          type: "integer"
          example: 1
        property_name:
          type: "string"
          example: "finca 1"
        stage_name:
          type: "string"
          example: "pre-emergencia"
        stage_number:
          type: "integer"
          example: "123"
        date:
          type: "string"
          example: "01/01/01"